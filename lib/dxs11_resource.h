/*==============================================================================

	Title		: RESOURCE
	Description :
	Date		:
	Author		:

--------------------------------------------------------------------------------

==============================================================================*/



#pragma once
#ifndef _DX11_RESOURCE_H_
#define _DX11_RESOURCE_H_


/*------------------------------------------------------------------------------
* include宣言
------------------------------------------------------------------------------*/
#include <d3d11.h>

/*------------------------------------------------------------------------------
* define宣言
------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------
* extern宣言
------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------
* prototype宣言
------------------------------------------------------------------------------*/


/*------------------------------------------------------------------------------
* class宣言
------------------------------------------------------------------------------*/
namespace DX {
	namespace DX11 {
		namespace GRAPHICAL {
			/// <summary>
			/// リソース
			/// </summary>
			class Resource {
			protected:
				ID3D11ShaderResourceView *resource = nullptr;		// リソース

			public:

				virtual ~Resource() { Release(); }

				/// <summary>
				/// 取得
				/// </summary>
				/// <returns></returns>
				ID3D11ShaderResourceView *Get(void) { return resource; }

				/// <summary>
				/// 読み込み
				/// </summary>
				/// <returns></returns>
				virtual HRESULT Load(void) { return 0; }

				/// <summary>
				/// 解放
				/// </summary>
				/// <returns></returns>
				virtual void Release(void) {
					if (resource) resource->Release();
					resource = nullptr;
				}

				operator ID3D11ShaderResourceView *() { return resource; }
			};
		}
	}
}

#endif
